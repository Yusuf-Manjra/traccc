# TRACCC library, part of the ACTS project (R&D line)
#
# (c) 2021-2022 CERN for the benefit of the ACTS project
#
# Mozilla Public License Version 2.0

name: Builds

on:
  push:
  pull_request:
    branches:
      - main

jobs:
  builds:
    name: ${{ matrix.platform.name }}-${{ matrix.build }}
    runs-on: ubuntu-latest
    container: ${{ matrix.platform.container }}
    strategy:
      matrix:
        platform:
          - name: CPU
            container: ghcr.io/acts-project/ubuntu2004:v30
          - name: CUDA
            container: ghcr.io/acts-project/ubuntu2004_cuda:v30
          - name: SYCL
            container: ghcr.io/acts-project/ubuntu2004_oneapi:v30
          - name: KOKKOS
            container: ghcr.io/acts-project/ubuntu2004:v30
        build:
          - Release
          - Debug
    # Use BASH as the shell from the images.
    defaults:
      run:
        shell: bash
    steps:
      - name: Dependencies
        run: apt-get install -y git-lfs
      - uses: actions/checkout@v2
        with:
          submodules: true
          lfs: true
      - name: Configure
        run: |
          source ${GITHUB_WORKSPACE}/.github/ci_setup.sh ${{ matrix.platform.name }}
          cmake -DCMAKE_BUILD_TYPE=${{ matrix.build }} -DTRACCC_BUILD_${{ matrix.platform.name }}=TRUE -S ${GITHUB_WORKSPACE} -B build
      - name: Build
        run: |
          source ${GITHUB_WORKSPACE}/.github/ci_setup.sh ${{ matrix.platform.name }}
          cmake --build build
      - name: Test
        if: "matrix.platform.name != 'CUDA'"
        run: |
          cd build
          source ${GITHUB_WORKSPACE}/.github/ci_setup.sh ${{ matrix.platform.name }}
          ctest --output-on-failure

  sonarUbuntu:
      name: Sonar-Ubuntu
      runs-on: ubuntu-latest
      env:
        SONAR_SCANNER_VERSION: 4.7.0.2747
        SONAR_SERVER_URL: "https://sonarcloud.io"
        BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
      steps:
        - uses: actions/checkout@v2
          with:
            fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
            submodules: true
            lfs: true
        - name: Set up JDK 11
          uses: actions/setup-java@v1
          with:
            java-version: 11
        - name: Cache SonarCloud packages
          uses: actions/cache@v1
          with:
            path: ~/.sonar/cache
            key: ${{ runner.os }}-sonar
            restore-keys: ${{ runner.os }}-sonar
        - name: Download and set up sonar-scanner
          env:
            SONAR_SCANNER_DOWNLOAD_URL: https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${{ env.SONAR_SCANNER_VERSION }}-linux.zip
          run: |
            mkdir -p $HOME/.sonar
            curl -sSLo $HOME/.sonar/sonar-scanner.zip ${{ env.SONAR_SCANNER_DOWNLOAD_URL }}
            unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
            echo "$HOME/.sonar/sonar-scanner-${{ env.SONAR_SCANNER_VERSION }}-linux/bin" >> $GITHUB_PATH
        - name: Download and set up build-wrapper
          env:
            BUILD_WRAPPER_DOWNLOAD_URL: ${{ env.SONAR_SERVER_URL }}/static/cpp/build-wrapper-linux-x86.zip
          run: |
            curl -sSLo $HOME/.sonar/build-wrapper-linux-x86.zip ${{ env.BUILD_WRAPPER_DOWNLOAD_URL }}
            unzip -o $HOME/.sonar/build-wrapper-linux-x86.zip -d $HOME/.sonar/
            echo "$HOME/.sonar/build-wrapper-linux-x86" >> $GITHUB_PATH
        - name: Run build-wrapper
          # wget https://developer.download.nvidia.com/compute/cuda/11.8.0/local_installers/cuda_11.8.0_520.61.05_linux.run
          # sudo sh cuda_11.8.0_520.61.05_linux.run
          # cmake -S . -B build -D TRACCC_BUILD_CUDA=TRUE -D DETRAY_BUILD_CUDA=TRUE -D VECMEM_BUILD_CUDA_LIBRARY=TRUE
          run: |
            sudo apt-get install dpkg-dev cmake g++ gcc binutils libx11-dev libxpm-dev libxft-dev libxext-dev python libssl-dev
            wget https://boostorg.jfrog.io/artifactory/main/release/1.80.0/source/boost_1_80_0.tar.bz2
            tar --bzip2 -xf boost_1_80_0.tar.bz2
            cd ./boost_1_80_0
            ./bootstrap.sh --with-libraries=filesystem program_options
            sudo ./b2 install
            wget https://root.cern/download/root_v6.24.02.Linux-ubuntu20-x86_64-gcc9.3.tar.gz
            tar -xzf root_v6.24.02.Linux-ubuntu20-x86_64-gcc9.3.tar.gz
            source root/bin/thisroot.sh
            mkdir build
            cmake -S . -B ./build
            build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} cmake --build build --clean-first
        - name: Run sonar-scanner
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          run: |
            sonar-scanner --define sonar.host.url="${{ env.SONAR_SERVER_URL }}" --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}"
